<?php

$dir = PUMPCMS_ROOT_PATH . '/external/stripe-php/lib';
set_include_path(get_include_path() . PATH_SEPARATOR . $dir . PATH_SEPARATOR . $dir . '/Util');

require_once 'Stripe.php';
require_once 'Set.php';
require_once 'JsonSerializable.php';
require_once 'StripeObject.php';
require_once 'ApiResource.php';
require_once 'Charge.php';

class monthly_stripe {
	public function display_form() {

		echo <<< EOM
		<form action="./charge.php" method="POST">
		  <script src="https://checkout.stripe.com/checkout.js" class="stripe-button"
		  data-key="pk_test_oxSpKjJK4Vxz1Ynzwue4lOUr"
		  data-amount="100"
		  data-name="ここにブランド名"
		  data-description="ここに商品名"
		  data-image="https://stripe.com/img/documentation/checkout/marketplace.png"
		  data-locale="ja"
		  data-zip-code="true"
		  data-label="今すぐ申し込む">
		  </script>
		  </form>
EOM;		  
	}
	
	public function charge() {
		$secret_key = 'sk_test_f9mPe1qa9nMANgebXCgaqgTL';
		\Stripe\Stripe::setApiKey($secret_key);
		
		// POSTされたデータが存在するなら
		if (isset($_POST['stripeToken']) && isset($_POST['stripeEmail'])) {
			var_dump($_POST);
			// POSTされたデータを受け取る
			$token = $_POST['stripeToken'];
			$email = $_POST['stripeEmail'];
			
			// 決済処理
			try {
				$charge = \Stripe\Charge::create(array(
													   'source' => $token,
													   'amount' => 100,
													   'currency' => 'jpy',
													   ));
			} catch (\Stripe\Error\Card $e) {
				// 決済できなかったときの処理
				die('決済が完了しませんでした');
			} finally {
				echo '課金成功';
			}
			
			// 決済完了後にメルマガへ自動登録
			$post_url = 'https://*********/';
			$param = array(
						   'Publisher_Id' => '****',
						   'Magazine_No' => '**',
						   'Mail' => $email,
						   );
			$options = array('https' => array(
											  'method' => 'POST',
											  'content' => http_build_query($param),
											  ));
			file_get_contents($url, false, stream_context_create($options));
			
			// サンクスページへリダイレクト
			header('Location: http://vccw.dev/test/thanks.html');
			exit;
		}
	}
}

	
	